int tes: 0;
int um_mais_um: 0;
int um: 0;
int dois: 0;
int quatro: 0;
int oito: 0;
int dezesseis: 0;
int trinta_e_dois: 'a';
int tesint: 0;
char teschar: 0;
float flatera: 1 / 3;
int aa[8]: 7 'a' 'a' 'a' 'a' 'a';
int bb[5];
int cc['b']: 1 2 3 4 5;
float seila: 3/2;

int fun-zero () {}

int fun-coma () {;}

int fun-single () um = 1

int fun-param-simple(int simple-param) print(simple-param)

int multiplica_por (int mul-um, int mul-dois) {}

int fun-if-else () 
    if 1>0 then 
    else 
        dezesseis = multiplica_por(multiplica_por(2, 2), multiplica_por(2, dois))

int fun-stranha () {
    {;};
    {;};
    ;;;;;
    {
        quatro = 4;
    };
    label-x:
    dezesseis = oito * oito;
    print "A era=15\n";
}

int funcreal (float a, char b, float c, int d) {
      um_mais_um = ( 8888888 + 888888 ) + funcreal(2 / 2, 'a', 1111111 / 2222222, 1 );
      if ( 1 < 2 ) != ( 2 < 2 ) then 
      {
            return 99999;
            return 8;
      } 
      else 
      {
            um_mais_um = ( 8888888 + 888888 ) + funcreal(2 / 2, 'a', 1111111 / 2222222, 1 );
      };
}

int funcvetor (float aaa) {
      print "Incrementado algumas vezes a fica ", funcvetor(1),"\n";
      tesint = funcvetor(1/2);
      flatera = aa[1*1];
      aa['a' + funcvetor(1/2)] = ( 8888888 + 888888 ) + funcvetor(2 / 2);
      um_mais_um = 0;
      if ( 1 < 2 ) != ( 2 < 2 ) then 
      {
            tesint = 1 + funcvetor(1/2);
            return 99999;
            return 8;
      };
}

int func-atribs (int atribs) {
      tes = 1;      
      tes = funcvetor(3/2);      
      if 1 > 0 then else ;
      um = 1;
      dois = um_mais_um;
      um_mais_um = 1 + 1;
      quatro = um_mais_um * dois;
      oito = multiplica_por(2, dois);
      dezesseis = multiplica_por(multiplica_por(2, dois), multiplica_por(2, dois));
      trinta_e_dois = dezesseis + oito + quatro + dois + 1 + um;
}

int fun (int printa, int printb, float printc) {
    print 
        "stringDos123guri@#$%*()",
        a,
        a, 
        12, 
        multiplica_por(multiplica_por(2, dois), multiplica_por(2, dois))
        ;
}

int fun-while () {
    while 1>1;
    while 1>1;
    while 1>1
        while 1>1
            while 1>1 {
                print 1;
                aa[0] = read;
            };
    while 1>1
        return 1;
    while 1>1
        dezesseis = multiplica_por(multiplica_por(2, dois), multiplica_por(2, dois));
    while 1>1 {
        return 1;
        dezesseis = multiplica_por(multiplica_por(2, dois), multiplica_por(2, dois));
    };
}
