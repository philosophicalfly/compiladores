int veci['b']: 1 2 3 4 5;
int um_mais_um: 0;
int retorno: 0;
float floatinho: 1/2;
int vec[5];
int dois: 0;
int quatro: 0;
int oito: 0;
int dezesseis: 0;

int funcreal (int parama, int paramb) {
    um_mais_um = ( 1 + 2 ) + ( 3 + 4 );
    um_mais_um = 11 + 22 / 33;
    if 1 < 2 then retorno = 111 else retorno = 222;
    if 3 < 4 then retorno = 333;
    while 5 < 6 {
        retorno = 444;
        retorno = read;
        return retorno;
    };
    print "um", 2, "tres";
    print (4);
    return (2+3);
}

int funcfalse () {
    um_mais_um = funcfalse();
    um_mais_um = funcreal(111+111, 222);
    label-x:
    vec[1/2] = 2;
    goto label-x;
}

int multiplica_por (int mul-um, int mul-dois) {}

int func-atribs (int atribs) {
      dezesseis = multiplica_por(multiplica_por(2, dois), multiplica_por(2, dois));
}
